// Generated from /home/manuelimal02/Documentos/Compiladores 2/OLC2_Proyecto1_202201524/Backend/Gramatica/Language.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class LanguageLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, TIPO=11, ENTERO=12, DECIMAL=13, CADENA=14, BOOLEANO=15, CARACTER=16, 
		IDENTIFICADOR=17, WS=18, COMENTARIO=19, COMENTARIOL=20, COMENTARIOLN=21;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "TIPO", "ENTERO", "DECIMAL", "CADENA", "BOOLEANO", "CARACTER", 
			"IDENTIFICADOR", "WS", "COMENTARIO", "COMENTARIOL", "COMENTARIOLN"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'var'", "'='", "';'", "':='", "'-'", "'*'", "'/'", "'+'", "'('", 
			"')'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, "TIPO", 
			"ENTERO", "DECIMAL", "CADENA", "BOOLEANO", "CARACTER", "IDENTIFICADOR", 
			"WS", "COMENTARIO", "COMENTARIOL", "COMENTARIOLN"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public LanguageLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Language.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0015\u00b4\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001"+
		"\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004"+
		"\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0003\n[\b\n\u0001\u000b\u0004\u000b^\b\u000b\u000b"+
		"\u000b\f\u000b_\u0001\f\u0004\fc\b\f\u000b\f\f\fd\u0001\f\u0001\f\u0004"+
		"\fi\b\f\u000b\f\f\fj\u0001\r\u0001\r\u0005\ro\b\r\n\r\f\rr\t\r\u0001\r"+
		"\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0003\u000e\u007f\b\u000e\u0001"+
		"\u000f\u0001\u000f\u0005\u000f\u0083\b\u000f\n\u000f\f\u000f\u0086\t\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0005\u0010\u008c\b\u0010"+
		"\n\u0010\f\u0010\u008f\t\u0010\u0001\u0011\u0004\u0011\u0092\b\u0011\u000b"+
		"\u0011\f\u0011\u0093\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0003"+
		"\u0012\u009a\b\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0005"+
		"\u0013\u00a0\b\u0013\n\u0013\f\u0013\u00a3\t\u0013\u0001\u0013\u0001\u0013"+
		"\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0005\u0014\u00ab\b\u0014"+
		"\n\u0014\f\u0014\u00ae\t\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u0001"+
		"\u0014\u0001\u0014\u0001\u00ac\u0000\u0015\u0001\u0001\u0003\u0002\u0005"+
		"\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n"+
		"\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011"+
		"#\u0012%\u0013\'\u0014)\u0015\u0001\u0000\u0006\u0001\u000009\u0001\u0000"+
		"\"\"\u0003\u0000AZ__az\u0004\u000009AZ__az\u0003\u0000\t\n\r\r  \u0002"+
		"\u0000\n\n\r\r\u00c2\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001"+
		"\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001"+
		"\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000"+
		"\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000"+
		"\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000"+
		"\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000"+
		"\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000"+
		"\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000"+
		"\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000"+
		"%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001"+
		"\u0000\u0000\u0000\u0001+\u0001\u0000\u0000\u0000\u0003/\u0001\u0000\u0000"+
		"\u0000\u00051\u0001\u0000\u0000\u0000\u00073\u0001\u0000\u0000\u0000\t"+
		"6\u0001\u0000\u0000\u0000\u000b8\u0001\u0000\u0000\u0000\r:\u0001\u0000"+
		"\u0000\u0000\u000f<\u0001\u0000\u0000\u0000\u0011>\u0001\u0000\u0000\u0000"+
		"\u0013@\u0001\u0000\u0000\u0000\u0015Z\u0001\u0000\u0000\u0000\u0017]"+
		"\u0001\u0000\u0000\u0000\u0019b\u0001\u0000\u0000\u0000\u001bl\u0001\u0000"+
		"\u0000\u0000\u001d~\u0001\u0000\u0000\u0000\u001f\u0080\u0001\u0000\u0000"+
		"\u0000!\u0089\u0001\u0000\u0000\u0000#\u0091\u0001\u0000\u0000\u0000%"+
		"\u0099\u0001\u0000\u0000\u0000\'\u009b\u0001\u0000\u0000\u0000)\u00a6"+
		"\u0001\u0000\u0000\u0000+,\u0005v\u0000\u0000,-\u0005a\u0000\u0000-.\u0005"+
		"r\u0000\u0000.\u0002\u0001\u0000\u0000\u0000/0\u0005=\u0000\u00000\u0004"+
		"\u0001\u0000\u0000\u000012\u0005;\u0000\u00002\u0006\u0001\u0000\u0000"+
		"\u000034\u0005:\u0000\u000045\u0005=\u0000\u00005\b\u0001\u0000\u0000"+
		"\u000067\u0005-\u0000\u00007\n\u0001\u0000\u0000\u000089\u0005*\u0000"+
		"\u00009\f\u0001\u0000\u0000\u0000:;\u0005/\u0000\u0000;\u000e\u0001\u0000"+
		"\u0000\u0000<=\u0005+\u0000\u0000=\u0010\u0001\u0000\u0000\u0000>?\u0005"+
		"(\u0000\u0000?\u0012\u0001\u0000\u0000\u0000@A\u0005)\u0000\u0000A\u0014"+
		"\u0001\u0000\u0000\u0000BC\u0005i\u0000\u0000CD\u0005n\u0000\u0000D[\u0005"+
		"t\u0000\u0000EF\u0005f\u0000\u0000FG\u0005l\u0000\u0000GH\u0005o\u0000"+
		"\u0000HI\u0005a\u0000\u0000IJ\u0005t\u0000\u0000JK\u00056\u0000\u0000"+
		"K[\u00054\u0000\u0000LM\u0005s\u0000\u0000MN\u0005t\u0000\u0000NO\u0005"+
		"r\u0000\u0000OP\u0005i\u0000\u0000PQ\u0005n\u0000\u0000Q[\u0005g\u0000"+
		"\u0000RS\u0005b\u0000\u0000ST\u0005o\u0000\u0000TU\u0005o\u0000\u0000"+
		"U[\u0005l\u0000\u0000VW\u0005r\u0000\u0000WX\u0005u\u0000\u0000XY\u0005"+
		"n\u0000\u0000Y[\u0005e\u0000\u0000ZB\u0001\u0000\u0000\u0000ZE\u0001\u0000"+
		"\u0000\u0000ZL\u0001\u0000\u0000\u0000ZR\u0001\u0000\u0000\u0000ZV\u0001"+
		"\u0000\u0000\u0000[\u0016\u0001\u0000\u0000\u0000\\^\u0007\u0000\u0000"+
		"\u0000]\\\u0001\u0000\u0000\u0000^_\u0001\u0000\u0000\u0000_]\u0001\u0000"+
		"\u0000\u0000_`\u0001\u0000\u0000\u0000`\u0018\u0001\u0000\u0000\u0000"+
		"ac\u0007\u0000\u0000\u0000ba\u0001\u0000\u0000\u0000cd\u0001\u0000\u0000"+
		"\u0000db\u0001\u0000\u0000\u0000de\u0001\u0000\u0000\u0000ef\u0001\u0000"+
		"\u0000\u0000fh\u0005.\u0000\u0000gi\u0007\u0000\u0000\u0000hg\u0001\u0000"+
		"\u0000\u0000ij\u0001\u0000\u0000\u0000jh\u0001\u0000\u0000\u0000jk\u0001"+
		"\u0000\u0000\u0000k\u001a\u0001\u0000\u0000\u0000lp\u0005\"\u0000\u0000"+
		"mo\b\u0001\u0000\u0000nm\u0001\u0000\u0000\u0000or\u0001\u0000\u0000\u0000"+
		"pn\u0001\u0000\u0000\u0000pq\u0001\u0000\u0000\u0000qs\u0001\u0000\u0000"+
		"\u0000rp\u0001\u0000\u0000\u0000st\u0005\"\u0000\u0000t\u001c\u0001\u0000"+
		"\u0000\u0000uv\u0005t\u0000\u0000vw\u0005r\u0000\u0000wx\u0005u\u0000"+
		"\u0000x\u007f\u0005e\u0000\u0000yz\u0005f\u0000\u0000z{\u0005a\u0000\u0000"+
		"{|\u0005l\u0000\u0000|}\u0005s\u0000\u0000}\u007f\u0005e\u0000\u0000~"+
		"u\u0001\u0000\u0000\u0000~y\u0001\u0000\u0000\u0000\u007f\u001e\u0001"+
		"\u0000\u0000\u0000\u0080\u0084\u0005\'\u0000\u0000\u0081\u0083\b\u0001"+
		"\u0000\u0000\u0082\u0081\u0001\u0000\u0000\u0000\u0083\u0086\u0001\u0000"+
		"\u0000\u0000\u0084\u0082\u0001\u0000\u0000\u0000\u0084\u0085\u0001\u0000"+
		"\u0000\u0000\u0085\u0087\u0001\u0000\u0000\u0000\u0086\u0084\u0001\u0000"+
		"\u0000\u0000\u0087\u0088\u0005\'\u0000\u0000\u0088 \u0001\u0000\u0000"+
		"\u0000\u0089\u008d\u0007\u0002\u0000\u0000\u008a\u008c\u0007\u0003\u0000"+
		"\u0000\u008b\u008a\u0001\u0000\u0000\u0000\u008c\u008f\u0001\u0000\u0000"+
		"\u0000\u008d\u008b\u0001\u0000\u0000\u0000\u008d\u008e\u0001\u0000\u0000"+
		"\u0000\u008e\"\u0001\u0000\u0000\u0000\u008f\u008d\u0001\u0000\u0000\u0000"+
		"\u0090\u0092\u0007\u0004\u0000\u0000\u0091\u0090\u0001\u0000\u0000\u0000"+
		"\u0092\u0093\u0001\u0000\u0000\u0000\u0093\u0091\u0001\u0000\u0000\u0000"+
		"\u0093\u0094\u0001\u0000\u0000\u0000\u0094\u0095\u0001\u0000\u0000\u0000"+
		"\u0095\u0096\u0006\u0011\u0000\u0000\u0096$\u0001\u0000\u0000\u0000\u0097"+
		"\u009a\u0003\'\u0013\u0000\u0098\u009a\u0003)\u0014\u0000\u0099\u0097"+
		"\u0001\u0000\u0000\u0000\u0099\u0098\u0001\u0000\u0000\u0000\u009a&\u0001"+
		"\u0000\u0000\u0000\u009b\u009c\u0005/\u0000\u0000\u009c\u009d\u0005/\u0000"+
		"\u0000\u009d\u00a1\u0001\u0000\u0000\u0000\u009e\u00a0\b\u0005\u0000\u0000"+
		"\u009f\u009e\u0001\u0000\u0000\u0000\u00a0\u00a3\u0001\u0000\u0000\u0000"+
		"\u00a1\u009f\u0001\u0000\u0000\u0000\u00a1\u00a2\u0001\u0000\u0000\u0000"+
		"\u00a2\u00a4\u0001\u0000\u0000\u0000\u00a3\u00a1\u0001\u0000\u0000\u0000"+
		"\u00a4\u00a5\u0006\u0013\u0000\u0000\u00a5(\u0001\u0000\u0000\u0000\u00a6"+
		"\u00a7\u0005/\u0000\u0000\u00a7\u00a8\u0005*\u0000\u0000\u00a8\u00ac\u0001"+
		"\u0000\u0000\u0000\u00a9\u00ab\t\u0000\u0000\u0000\u00aa\u00a9\u0001\u0000"+
		"\u0000\u0000\u00ab\u00ae\u0001\u0000\u0000\u0000\u00ac\u00ad\u0001\u0000"+
		"\u0000\u0000\u00ac\u00aa\u0001\u0000\u0000\u0000\u00ad\u00af\u0001\u0000"+
		"\u0000\u0000\u00ae\u00ac\u0001\u0000\u0000\u0000\u00af\u00b0\u0005*\u0000"+
		"\u0000\u00b0\u00b1\u0005/\u0000\u0000\u00b1\u00b2\u0001\u0000\u0000\u0000"+
		"\u00b2\u00b3\u0006\u0014\u0000\u0000\u00b3*\u0001\u0000\u0000\u0000\r"+
		"\u0000Z_djp~\u0084\u008d\u0093\u0099\u00a1\u00ac\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}